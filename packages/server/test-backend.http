### ===== NOFILTER AI - TEST ENDPOINTS =====
### Frontend: http://localhost:5174
### Backend API: http://localhost:3000/api/chat

### üè• Health Check
GET http://localhost:3000/health

###

### ü§ñ Chat b√°sico con Gemini 2.5 Flash Lite (econ√≥mico)
POST http://localhost:3000/api/chat/gemini
Content-Type: application/json

{
   "prompt": "Hola, ¬øc√≥mo est√°s? Cu√©ntame sobre las capacidades de Gemini 2.5",
   "conversationId": "{{$guid}}",
   "taskType": "chat",
   "useKnowledgeBase": true,
   "temperature": 0.8,
   "maxTokens": 4096
}

###

### üé® Generar imagen REAL con Gemini Image Preview
POST http://localhost:3000/api/chat/gemini/image
Content-Type: application/json

{
   "prompt": "A beautiful sunset over a serene lake with mountains in the background, photorealistic style",
   "conversationId": "{{$guid}}",
   "style": "photorealistic",
   "quality": "high",
   "aspectRatio": "16:9"
}

###

### üé® Generar imagen art√≠stica
POST http://localhost:3000/api/chat/gemini/image
Content-Type: application/json

{
   "prompt": "A futuristic city with flying cars and neon lights",
   "conversationId": "{{$guid}}",
   "style": "artistic",
   "quality": "high", 
   "aspectRatio": "9:16"
}

###

### üé® Generar imagen cartoon
POST http://localhost:3000/api/chat/gemini/image
Content-Type: application/json

{
   "prompt": "A cute robot playing with colorful balloons in a park",
   "conversationId": "{{$guid}}",
   "style": "cartoon",
   "quality": "standard",
   "aspectRatio": "1:1"
}

###

### üîì Chat sin censura (OpenRouter)
POST http://localhost:3000/api/chat/uncensored
Content-Type: application/json

{
   "prompt": "Cu√©ntame un chiste picante sobre programadores",
   "conversationId": "{{$guid}}",
   "temperature": 0.9,
   "maxTokens": 2048
}

###

### üëÅÔ∏è An√°lisis de imagen con Gemini Vision
POST http://localhost:3000/api/chat/gemini
Content-Type: application/json

{
   "prompt": "Analiza esta imagen y describe todo lo que ves en detalle",
   "conversationId": "{{$guid}}",
   "taskType": "vision",
   "useKnowledgeBase": false
}

###

### üéµ Generaci√≥n de audio con Gemini TTS
POST http://localhost:3000/api/chat/gemini
Content-Type: application/json

{
   "prompt": "Convert this text to speech: Hello, this is a test of the Gemini text-to-speech capabilities",
   "conversationId": "{{$guid}}",
   "taskType": "text_to_speech"
}

###

### üß† Chat con memoria autom√°tica
POST http://localhost:3000/api/chat/gemini
Content-Type: application/json

{
   "prompt": "Me llamo Juan y trabajo como desarrollador en Madrid. Me gusta la programaci√≥n en TypeScript",
   "conversationId": "{{$guid}}",
   "taskType": "chat",
   "useKnowledgeBase": true
}

###

### üß† Recuperar informaci√≥n con memoria
POST http://localhost:3000/api/chat/gemini  
Content-Type: application/json

{
   "prompt": "¬øRecuerdas mi nombre y a qu√© me dedico?",
   "conversationId": "{{$guid}}",
   "taskType": "chat",
   "useKnowledgeBase": true
}

###

### üìä Test de endpoints m√∫ltiples (Batch testing)
POST http://localhost:3000/api/chat/gemini
Content-Type: application/json

{
   "prompt": "Dame un resumen de todas tus capacidades multimodales",
   "conversationId": "test-capabilities",
   "taskType": "chat",
   "useKnowledgeBase": false,
   "temperature": 0.7,
   "maxTokens": 2048
}

###

### üéØ Test de generaci√≥n de imagen espec√≠fica
POST http://localhost:3000/api/chat/gemini/image
Content-Type: application/json

{
   "prompt": "Un gato con gafas de sol conduciendo una motocicleta por una carretera costera al atardecer",
   "conversationId": "test-image-generation",
   "style": "photorealistic",
   "quality": "high",
   "aspectRatio": "16:9"
}

###

### üî• Test uncensored avanzado
POST http://localhost:3000/api/chat/uncensored
Content-Type: application/json

{
   "prompt": "Escribe un di√°logo picante entre dos personajes en una situaci√≥n c√≥mica",
   "conversationId": "test-uncensored",
   "temperature": 1.0,
   "maxTokens": 1500
}

###

### ===== VERIFICACI√ìN DE IM√ÅGENES GENERADAS =====
### Las im√°genes se sirven desde: http://localhost:3000/generated-images/
### Ejemplo: GET http://localhost:3000/generated-images/gemini-image-1234567890.png

### üñºÔ∏è Listar directorio de im√°genes (si est√° configurado)
GET http://localhost:3000/generated-images/

###